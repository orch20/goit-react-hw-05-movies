{"version":3,"file":"static/js/18.08493bb4.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.scss?0a3a","components/MovieDetails/MovieDetails.jsx","services/movieApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wraper\":\"MovieDetails_wraper__iaStV\",\"button\":\"MovieDetails_button__hZ9Rw\",\"infoThumb\":\"MovieDetails_infoThumb__MtBtm\",\"infoThumbText\":\"MovieDetails_infoThumbText__cbfMf\",\"infoTitle\":\"MovieDetails_infoTitle__sud69\",\"img\":\"MovieDetails_img__Wmheu\",\"overview\":\"MovieDetails_overview__ZzZtr\",\"movieTitle\":\"MovieDetails_movieTitle__JkMyp\",\"titleAditional\":\"MovieDetails_titleAditional__YLJ6V\",\"aditionalInfoWraper\":\"MovieDetails_aditionalInfoWraper__q8NoU\",\"linkWraper\":\"MovieDetails_linkWraper__39kPW\",\"link\":\"MovieDetails_link__0Fq4t\",\"selected\":\"MovieDetails_selected__iduqy\"};","// import { useFetchPopularMovies } from 'Hooks/useFetchMovies';\nimport { useState, useEffect } from 'react';\nimport {\n  useParams,\n  Outlet,\n  NavLink,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\nimport { getMovieById } from '../../services/movieApi';\nimport css from './MovieDetails.module.scss';\nconst POSTERWIDTH = 300;\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { from } = location?.state || '/';\n  const goBack = () => navigate(from);\n\n  useEffect(() => {\n    const getMovie = async () => {\n      try {\n        const data = await getMovieById(movieId);\n\n        setMovie(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getMovie();\n  }, [movieId]);\n\n  const genres = movie.genres?.map(genre => genre.name).join(', ');\n\n  return (\n    <div className={css.wraper}>\n      <button className={css.button} onClick={goBack}>\n        Go back\n      </button>\n      <div className={css.infoThumb}>\n        {movie.poster_path ? (\n          <img\n            className={css.img}\n            src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n            alt={movie.title}\n            width={POSTERWIDTH}\n          />\n        ) : (\n          <img\n            className={css.img}\n            src={\n              'https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg?20200913095930'\n            }\n            alt={movie.title}\n            width={POSTERWIDTH}\n            height={450}\n          />\n        )}\n        <div className={css.infoThumbText}>\n          <h2 className={css.movieTitle}>\n            {movie.title} ({movie.release_date?.slice(0, 4)})\n          </h2>\n          <ul>\n            <span className={css.infoTitle}>Genres:</span>{' '}\n            {genres || 'no information'}\n          </ul>\n          <p className={css.rating}>\n            <span className={css.infoTitle}>Rating:</span>{' '}\n            {movie.vote_average?.toFixed(1)}\n          </p>\n          <p className={css.overview}>\n            <span className={css.infoTitle}>Overview:</span> {movie.overview}\n          </p>\n        </div>\n      </div>\n      <div className={css.aditionalInfoWraper}>\n        <h3 className={css.titleAditional}>\n          Aditional information:{' '}\n          <div className={css.linkWraper}>\n            <NavLink\n              className={({ isActive }) => (isActive ? 'active-link' : 'link')}\n              state={{ from }}\n              to={`/Movies/${movie.id}/cast`}\n            >\n              Cast\n            </NavLink>\n            <NavLink\n              className={({ isActive }) => (isActive ? 'active-link' : 'link')}\n              state={{ from }}\n              to={`/Movies/${movie.id}/reviews`}\n            >\n              Reviews\n            </NavLink>\n          </div>\n        </h3>\n      </div>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","const APIKEY = 'a862388c03cb8401487df36e94a12066';\nconst URL = `https://api.themoviedb.org/3`;\n\n//api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>\n\nexport const getPopularMovies = async () => {\n  return await fetch(\n    `${URL}/trending/movie/week?api_key=${APIKEY}&include_adult=false`\n  ).then(res => {\n    if (!res.ok) {\n      //   return Promise.reject(new Error(`No ${searchQuery} picture`));\n    }\n    return res.json();\n  });\n};\n\nexport const getMovieById = async id => {\n  return await fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${APIKEY}&include_adult=false`\n  ).then(res => {\n    if (!res.ok) {\n      //   return Promise.reject(new Error(`No ${searchQuery} picture`));\n    }\n    return res.json();\n  });\n};\n\nexport const getMovieCast = async id => {\n  return await fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${APIKEY}&include_adult=false`\n  ).then(res => {\n    if (!res.ok) {\n      //   return Promise.reject(new Error(`No ${searchQuery} picture`));\n    }\n    return res.json();\n  });\n};\n// https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\n\nexport const getMovieByQuery = async name => {\n  return await fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${APIKEY}&query=${name}&include_adult=false`\n  ).then(res => {\n    if (!res.ok) {\n      //   return Promise.reject(new Error(`No ${searchQuery} picture`));\n    }\n    return res.json();\n  });\n};\n\nexport const getReviews = async id => {\n  return await fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${APIKEY}&include_adult=false`\n  ).then(res => {\n    if (!res.ok) {\n      //   return Promise.reject(new Error(`No ${searchQuery} picture`));\n    }\n    return res.json();\n  });\n};\n"],"names":["movieId","useParams","useState","movie","setMovie","navigate","useNavigate","location","useLocation","from","state","useEffect","getMovie","getMovieById","data","console","log","genres","map","genre","name","join","className","css","onClick","poster_path","src","alt","title","width","height","release_date","slice","vote_average","toFixed","overview","isActive","to","id","APIKEY","getPopularMovies","fetch","then","res","ok","json","getMovieCast","getMovieByQuery","getReviews"],"sourceRoot":""}